{"version":3,"sources":["Pages/UserPage/SubPage/friends.js","Components/mangaCard/index.js"],"names":["useStyles","makeStyles","theme","large","width","height","marginRight","UserMangaList","props","userId","match","params","classes","useState","isLoading","setIsLoading","list","setList","fetchSubscriptions","a","console","log","axios","get","process","response","data","map","el","reseiver","useEffect","friendStatus","style","paddingLeft","paddingTop","color","container","spacing","user","i","key","item","xs","sm","component","Link","to","Routes","User","link","id","button","className","alt","username","src","imgUrl","primary","name","overflow","textOverflow","whiteSpace","marginTop","load","border","background","variant","title","subtitle"],"mappings":"qQA+BMA,G,MAAYC,aAAW,SAAAC,GAAK,MAAK,CAEnCC,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,YAAY,SAqEDC,UA7DK,SAACC,GACrB,IAAMC,EAASD,EAAME,MAAMC,OAAOF,OAC5BG,EAAUZ,IAFe,EAGAa,oBAAS,GAHT,mBAGxBC,EAHwB,KAGdC,EAHc,OAIVF,mBAAS,IAJC,mBAIxBG,EAJwB,KAInBC,EAJmB,KAKzBC,EAAkB,uCAAG,WAAMT,GAAN,eAAAU,EAAA,6DACzBJ,GAAa,GACbK,QAAQC,IAAI,WAAYZ,GAFC,kBAIAa,IAAMC,IAAN,UAAaC,oCAAb,mBAAsDf,IAJtD,OAIjBgB,EAJiB,OAKvBL,QAAQC,IAAI,4CAAmCI,EAASC,MACxDT,EAAQQ,EAASC,KAAKV,KAAKW,KAAI,SAAAC,GAAE,OAAEA,EAAGC,aACtCd,GAAa,GAPU,kDASvBK,QAAQC,IAAR,oDATuB,0DAAH,sDAgBxB,OAJAS,qBAAU,WACRZ,EAAmBT,KACnB,CAACD,EAAMuB,eAENjB,EACM,yBAAKkB,MAAO,CAACC,YAAY,mBAAmBC,WAAW,KAAK,kBAAC,IAAD,CAAkBC,MAAM,eAG3F,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,GAiBvBrB,EAAKW,KAAI,SAACW,EAAKC,GAAN,OACH,kBAAC,IAAD,CAAMC,IAAKD,EAAGE,MAAI,EAACC,GAAI,EAAGC,GAAI,GACtB,kBAAC,IAAD,CAAUC,UAAWC,IAAMC,GAAIC,IAAOC,KAAKC,KAAKX,EAAKY,IAAKA,GAAIZ,EAAKY,GAAIC,QAAM,GAC3E,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,UAAWxC,EAAQT,MACnBkD,IAAKf,EAAKgB,SACVC,IAAKjB,EAAKkB,UAGd,kBAAC,IAAD,CAAeC,QAAS,kBAAC,IAAD,CAAYtB,MAAM,eAAeG,EAAKgB,oB,gCChGpF,uDAMMtD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCwD,KAAM,CACFC,SAAU,SACVC,aAAc,WACdC,WAAY,SACZC,UAAW5D,EAAMmC,QAAQ,QAKlB,aAAA7B,GACX,IAAMI,EAAUZ,IAChB,OACI,oCACA,yBAAKoD,UAAU,aACX,yBAAKA,UAAU,eACb5C,EAAMuD,KAEH,yBAAKX,UAAW,kCAAmCpB,MAAO,CAACgC,OAAO,OAAQC,WAAW,yBADrF,yBAAKb,UAAU,gBAAgBG,IAAK/C,EAAM+C,OAMnD,yBAAKH,UAAU,aACX,kBAAC,IAAD,CAAYjB,MAAM,cAAciB,UAAWxC,EAAQ8C,KAAMQ,QAAQ,aAC/D1D,EAAMuD,KAEH,kBAAC,IAAD,CAAUX,UAAU,GAAIhD,MAAM,SAD9BI,EAAM2D,OAIX,kBAAC,IAAD,CAAYhC,MAAM,UAAU+B,QAAQ,WAClC1D,EAAMuD,KAEH,kBAAC,IAAD,CAAUX,UAAU,GAAGhD,MAAM,QAD7BI,EAAM4D,c","file":"static/js/29.750d91ab.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react';\r\n\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from \"axios\";\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport { observer, inject} from 'mobx-react';\r\n\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes } from '../../../Routes'\r\nimport {Grid,CircularProgress} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Manga from '../../../Components/mangaCard/';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    large: {\r\n      width: 60,\r\n      height: 60,\r\n      marginRight:16\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst UserMangaList = (props) => {\r\n  const userId = props.match.params.userId\r\n  const classes = useStyles();\r\n  const [isLoading,setIsLoading]=useState(true)\r\n  const [list,setList]=useState([])\r\n  const fetchSubscriptions = async userId => {\r\n    setIsLoading(true)\r\n    console.log('fetchSub', userId)\r\n    try {\r\n      const response = await axios.get(`${process.env.REACT_APP_API_BASE}/friend/${userId}`)\r\n      console.log('ðŸ‘‰ Returned UserMangaList data:', response.data);\r\n      setList(response.data.list.map(el=>el.reseiver))\r\n      setIsLoading(false)\r\n    } catch (e) {\r\n      console.log(`ðŸ˜± Axios request failed: ${e}`);\r\n    }   \r\n  }\r\n  useEffect(()=>{\r\n    fetchSubscriptions(userId)\r\n  },[props.friendStatus])\r\n\r\n  if(isLoading){\r\n    return <div style={{paddingLeft:'calc(50% - 10px)',paddingTop:40}}><CircularProgress color=\"secondary\" /></div>\r\n  }\r\n  return(\r\n    <Grid container spacing={2}>\r\n    \r\n    {/* {\r\n        !isLoading&&list.map(el=>\r\n            <Grid key={el.id} item xs={6} sm={2}>\r\n                <Link to={Routes.Manga.link(el.id)}>\r\n\r\n                    <Manga src={el.imgUrl} load={false}\r\n                    title={`${el.title} | ${el.englishTitle}`} \r\n                    subtitle={'Ongoing, ' + (el.lastChapter ? `Ð³Ð»Ð°Ð²Ð° ${el.lastChapter.volume} - ${el.lastChapter.chapter}` : 'Ð³Ð»Ð°Ð² Ð½ÐµÑ‚')}\r\n                    />\r\n                </Link>\r\n            </Grid>\r\n        )\r\n    } */}\r\n    {\r\n    // isLoading&&\r\n      list.map((user,i)=>\r\n            <Grid key={i} item xs={6} sm={3}>\r\n                    <ListItem component={Link} to={Routes.User.link(user.id)} id={user.id} button>\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          className={classes.large}\r\n                          alt={user.username}\r\n                          src={user.imgUrl}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <ListItemText  primary={<Typography color=\"textPrimary\">{user.username}</Typography>} />\r\n                    </ListItem>\r\n            </Grid>\r\n        )\r\n    }\r\n    </Grid>\r\n  )}\r\n\r\n\r\n  export default UserMangaList;","import React from 'react';\r\nimport './card.css'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Badge from '@material-ui/core/Badge';\r\nconst useStyles = makeStyles(theme => ({\r\n    name: {\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n}));\r\n\r\n\r\nexport default props => {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n        <div className=\"card_head\">\r\n            <div className=\"img_spacer\" ></div>\r\n            {!props.load\r\n                ?<img className='card_head_img' src={props.src}></img>\r\n                :<img className={'card_head_img MuiSkeleton-pulse'} style={{border:'none', background:'rgba(0, 0, 0, 0.04)'}}></img>\r\n            }\r\n \r\n        </div>\r\n    \r\n        <div className=\"card_body\">\r\n            <Typography color=\"textPrimary\" className={classes.name} variant=\"subtitle2\">\r\n            {!props.load\r\n                ?props.title\r\n                :<Skeleton className=\"\"  width=\"100%\" />\r\n            }\r\n            </Typography>\r\n            <Typography color=\"primary\" variant=\"caption\">\r\n            {!props.load\r\n                ?props.subtitle\r\n                :<Skeleton className=\"\" width=\"80%\" />\r\n            }\r\n            </Typography>\r\n        </div>\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}