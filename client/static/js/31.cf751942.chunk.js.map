{"version":3,"sources":["Components/navbar/search.js","Components/useDebounce.js","Components/navbar/index.js"],"names":["mangaListStyles","makeStyles","theme","root","padding","paddingTop","paddingBottom","width","item","height","text","spacing","itemImg","marginRight","marginLeft","ButtonLink","props","Button","component","Link","MangaList","sub","classes","React","useState","mangaList","setMangaList","isLoading","setIsLoading","fetchMangaList","a","axios","get","process","response","data","list","console","log","useEffect","length","List","className","map","ListItem","key","id","to","Routes","Manga","link","alignItems","ListItemAvatar","src","imgUrl","ListItemText","primary","title","secondary","englishTitle","style","Typography","variant","subTitle","userListStyles","UserList","userList","setUserList","fetchUserList","User","Avatar","alt","username","isOnline","useStyles","createStyles","position","dropdown","display","flexDirection","top","right","zIndex","boxShadow","overrides","MuiPaper","backgroundColor","palette","background","paper","tabs","divider","ClickAway","open","setOpen","value","setValue","subStr","setSubStr","debStr","setDebStr","debouncedSubStr","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","ClickAwayListener","onClickAway","InputBase","onChange","e","target","onFocus","placeholder","IconButton","size","Tabs","centered","indicatorColor","textColor","v","aria-label","Tab","tab","label","Divider","trim","toolBar","justifyContent","paddingLeft","paddingRight","minHeight","margin","button","logo","borderRadius","indicator","opacity","selected","color","minWidth","NavBar","observer","authStore","isActive","setIsActive","pathname","useLocation","TabRouteList","route","i","path","AppBar","elevation","Toolbar","Hidden","mdUp","TemporaryDrawer","smDown","name","ruName","orientation","current_user","SignIn","SignUp","UserButton","user","logout","useStylesButton","useHistory","anchorRef","useRef","handleClose","event","current","contains","handleListKeyDown","preventDefault","prevOpen","focus","ref","aria-controls","undefined","aria-haspopup","onClick","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","MenuList","autoFocusItem","onKeyDown","MenuItem","tabList","subLink","EditProfilePage","left","bottom","state","setState","toggleDrawer","anchor","type","Fragment","Drawer","onClose","inject"],"mappings":"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","file":"static/js/31.cf751942.chunk.js","sourcesContent":["import React,{useEffect} from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from 'axios'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Routes} from '../../Routes'\r\nimport { Link } from \"react-router-dom\";\r\nimport useDebounce from '../useDebounce';\r\nconst mangaListStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding:0,\r\n        paddingTop:8,\r\n        paddingBottom:8,\r\n        width:392\r\n    },\r\n    item:{\r\n        height: 80,\r\n        padding:'0px 8px'\r\n    },\r\n    text:{\r\n      paddingTop:theme.spacing(1),\r\n    },\r\n    itemImg:{\r\n        height: 60,\r\n        marginRight:theme.spacing(1),\r\n        marginLeft:theme.spacing(0.5)\r\n    },\r\n}));\r\n\r\nconst ButtonLink = (props) => <Button {...props} component={Link}></Button>\r\n\r\nconst MangaList = ({sub}) => {\r\n  const classes = mangaListStyles();\r\n  const [mangaList, setMangaList] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const fetchMangaList =async(sub)=>{\r\n    setIsLoading(true)\r\n    try {\r\n      // console.log('search')\r\n      const response = await axios.get(`${process.env.REACT_APP_API_BASE}/manga/search?sub=${sub}`)\r\n      // console.log('👉 Returned data:', response.data);\r\n      setMangaList(response.data.list)\r\n    } catch (e) {\r\n      setMangaList([])\r\n      console.log(`😱 Axios request failed: ${e}`);\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n  useEffect(()=>{\r\n    fetchMangaList(sub)\r\n  },[sub])\r\n  if(!mangaList.length&&!isLoading){\r\n    return <div style={{padding:16}}>\r\n      <Typography variant=\"subtitle1\" component=\"h6\"  className={classes.subTitle}>\r\n        Ничего не найдено\r\n      </Typography>\r\n    </div>\r\n  }\r\n  return(\r\n    <div>\r\n      <List className={classes.root}>\r\n        {\r\n            mangaList.map(item=>(\r\n                <ListItem key={item.id}  to={Routes.Manga.link(item.id)} component={ButtonLink} alignItems=\"flex-start\" className={classes.item}>\r\n                <ListItemAvatar>\r\n                    <img src={item.imgUrl} className={classes.itemImg}></img>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                className={classes.text}\r\n                primary={item.title}\r\n                secondary={item.englishTitle}\r\n                />\r\n                </ListItem>\r\n            ))\r\n        }\r\n      </List>\r\n    </div>\r\n  )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const userListStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding:0,\r\n        paddingTop:8,\r\n        paddingBottom:8,\r\n        width:392\r\n    },\r\n    item:{\r\n        height: 64,\r\n        padding:'0px 8px'\r\n    },\r\n\r\n    itemImg:{\r\n        height: 48,\r\n        marginRight:theme.spacing(1),\r\n        marginLeft:theme.spacing(0.5)\r\n    },\r\n}));\r\n\r\n\r\nconst UserList = ({sub}) => {\r\n  const classes = userListStyles();\r\n  const [userList, setUserList] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const fetchUserList =async(sub)=>{\r\n    setIsLoading(true)\r\n    try {\r\n      // console.log('search')\r\n      const response = await axios.get(`${process.env.REACT_APP_API_BASE}/user/search?sub=${sub}`)\r\n      // console.log('👉 Returned data:', response.data);\r\n      setUserList(response.data.list)\r\n    } catch (e) {\r\n      setUserList([])\r\n      console.log(`😱 Axios request failed: ${e}`);\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n  useEffect(()=>{\r\n    fetchUserList(sub)\r\n  },[sub])\r\n  if(!userList.length&&!isLoading){\r\n    return <div style={{padding:16}}>\r\n      <Typography variant=\"subtitle1\" component=\"h6\"  className={classes.subTitle}>\r\n        Ничего не найдено\r\n      </Typography>\r\n    </div>\r\n  }\r\n  return(\r\n    <div>\r\n      <List className={classes.root}>\r\n        {\r\n            userList.map(item=>(\r\n                <ListItem key={item.id} to={Routes.User.link(item.id)} component={ButtonLink} alignItems=\"flex-start\" className={classes.item}>\r\n                <ListItemAvatar>\r\n                  <Avatar alt={item.username} src={item.imgUrl} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                className={classes.text}\r\n                primary={item.username}\r\n                secondary={item.isOnline?'Online':'offline'}\r\n                />\r\n                </ListItem>\r\n            ))\r\n        }\r\n      </List>\r\n    </div>\r\n  )}\r\n\r\n\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'relative',\r\n    },\r\n    dropdown: {\r\n      display:'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      width:400,\r\n      top: 48,\r\n      right: 0,\r\n      // left: 0,\r\n      zIndex: 1,\r\n      // border: '1px solid',\r\n      boxShadow: theme.overrides.MuiPaper.boxShadow,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    tabs:{\r\n      width:'100%',\r\n    },\r\n    divider:{\r\n      width:'100%',\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function ClickAway() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState(0);\r\n  const [subStr, setSubStr] = React.useState(\"\");\r\n  const [debStr, setDebStr] = React.useState(\"\");\r\n  const debouncedSubStr = useDebounce(subStr, 100);\r\n  useEffect(\r\n    () => {\r\n      setDebStr(debouncedSubStr)\r\n    },\r\n    [debouncedSubStr]\r\n  );\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setSubStr(\"\")\r\n    setOpen(false);\r\n  };\r\n \r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <div className={classes.root}>\r\n        {/* <button type=\"button\" onClick={handleClick}>\r\n          Open menu dropdown\r\n        </button> */}\r\n        <div style={{ padding: \"2px 8px\", display: \"flex\", alignItems: \"center\"}}>\r\n          <InputBase value={subStr} onChange={e=>setSubStr(e.target.value)} onFocus={handleClick} placeholder=\"Поиск\" />\r\n          <IconButton size=\"small\">\r\n              <SearchIcon />\r\n          </IconButton>\r\n        </div>\r\n        {open ? (\r\n          <div className={`${classes.dropdown} search`}>\r\n                <Tabs\r\n                    centered\r\n                    className={classes.tabs}\r\n                    value={value}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={(e,v)=>setValue(v)}\r\n                    aria-label=\"disabled tabs example\"\r\n                >\r\n                    <Tab className={classes.tab} label={\"манга\"} />\r\n                    <Tab className={classes.tab} label={\"пользователь\"} />\r\n                </Tabs>\r\n                <Divider className={classes.divider} />\r\n                {\r\n                  debStr.trim().length>=3\r\n                  ?<div>\r\n                    {value\r\n                    ?<UserList sub={debStr}/>\r\n                    :<MangaList sub={debStr}/>\r\n                    }\r\n                  </div>\r\n                  :<div style={{padding:16}}>\r\n                      <Typography variant=\"subtitle1\" component=\"h6\"  className={classes.subTitle}>\r\n                        Для поиска введите не менее трех символов\r\n                      </Typography>\r\n                  </div>\r\n                }\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nexport default function useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time ...\r\n      // ... useEffect is re-called. useEffect will only be re-called ...\r\n      // ... if value changes (see the inputs array below). \r\n      // This is how we prevent debouncedValue from changing if value is ...\r\n      // ... changed within the delay period. Timeout gets cleared and restarted.\r\n      // To put it in context, if the user is typing within our app's ...\r\n      // ... search box, we don't want the debouncedValue to update until ...\r\n      // ... they've stopped typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value] \r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import React,{useEffect} from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//box-shadow: 0 8px 20px 0 rgba(218,224,235,.6);\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Link,Route,useLocation ,useHistory} from \"react-router-dom\";\r\nimport { TabRouteList,Routes } from '../../Routes'\r\nimport { observer, inject} from 'mobx-react';\r\nimport Search from './search'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        backgroundColor:theme.palette.background.paper,\r\n        // boxShadow: theme.shadows.elevation1,\r\n    },\r\n    toolBar:{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        paddingLeft:theme.spacing(1.5),\r\n        paddingRight:theme.spacing(1.5),\r\n        minHeight: 48,\r\n        // boxShadow: \"0 8px 20px 0 rgba(218,224,235,.6)\",\r\n    },\r\n    divider: {\r\n      height: 30,\r\n      margin: theme.spacing(1),\r\n    },\r\n    button:{\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    logo:{\r\n        borderRadius: 0,\r\n        margin: theme.spacing(0.5),\r\n    },\r\n    tabs:{\r\n        marginLeft: theme.spacing(1.5),\r\n    },\r\n    indicator:{\r\n        opacity: 0\r\n    },\r\n    selected:{\r\n        color: 'rgba(0, 0, 0, 0.54) !important'\r\n    },\r\n    tab:{\r\n        minWidth:0\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NavBar = observer(({authStore}) => {\r\n  const [value, setValue] = React.useState(2);\r\n  const [isActive, setIsActive] = React.useState(false);\r\n\r\n  const classes = useStyles(isActive);\r\n  const setTab = (v) => {\r\n     \r\n      setValue(v)\r\n  }\r\n  const { pathname } = useLocation();\r\n  useEffect(()=>{\r\n    // console.log(pathname=='/','/')\r\n    let v = null;\r\n    TabRouteList.map((route,i)=>{\r\n        // console.log(route.path,pathname,route.path==pathname)\r\n        if(route.path==pathname){\r\n            v=i\r\n            setIsActive(true)\r\n            setValue(v)\r\n        }\r\n    })\r\n    if(v===null){\r\n        setIsActive(false)\r\n    }\r\n  },[pathname])\r\n//   matchPath(\"/users\", { path: \"/users/:id\", exact: true, strict: true});\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n        <AppBar elevation={3} className={classes.root}>\r\n        <Toolbar className={classes.toolBar}>\r\n        <Hidden mdUp>\r\n            <TemporaryDrawer/>   \r\n        </Hidden>\r\n        <Hidden smDown>\r\n            <div style={{ display: \"flex\", alignItems: \"center\"}}>\r\n                <Avatar component={Link} to={'/'} src=\"/logo192.png\" className={classes.logo}/>\r\n                <Tabs\r\n                    classes={isActive?{root:classes.tabs}:{root:classes.tabs,indicator:classes.indicator}}\r\n                    value={value}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    // onChange={handleChange}\r\n                    aria-label=\"disabled tabs example\"\r\n                >\r\n                    {TabRouteList.map(route=><Tab classes={isActive||{selected:classes.selected}} key={route.name} component={Link} to={route.path} className={classes.tab} label={route.ruName} />)}\r\n                </Tabs>\r\n            </div>\r\n            </Hidden>\r\n            \r\n            <div style={{display: \"flex\", alignItems: \"center\" }}>\r\n                <Search/>\r\n                \r\n                <Divider orientation=\"vertical\" className={classes.divider} />\r\n                {\r\n                    authStore.current_user===null\r\n                    ?<>\r\n                        <Button component={Link} to={Routes.SignIn.path} size=\"small\" className={classes.button}>\r\n                            Войти\r\n                        </Button>\r\n                        <Button component={Link} to={Routes.SignUp.path} variant=\"outlined\" size=\"small\" color=\"secondary\" className={classes.button}>\r\n                            Регистрация\r\n                        </Button>\r\n                    </>\r\n                    :<>\r\n                        {/* <Button component={Link} to={Routes.User.link(authStore.current_user.id)} size=\"small\" className={classes.button}>\r\n                        {authStore.current_user.username}\r\n                        </Button> */}\r\n                        <UserButton user={authStore.current_user} logout={authStore.logout}/>\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n  );\r\n})\r\nconst useStylesButton = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\nfunction UserButton({user,logout}){\r\n    const history = useHistory();\r\n    const classes = useStylesButton();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n  \r\n    const handleToggle = () => {\r\n      setOpen((prevOpen) => !prevOpen);\r\n    };\r\n  \r\n    const handleClose = (event) => {\r\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n        return;\r\n      }\r\n  \r\n      setOpen(false);\r\n    };\r\n  \r\n    function handleListKeyDown(event) {\r\n      if (event.key === 'Tab') {\r\n        event.preventDefault();\r\n        setOpen(false);\r\n      }\r\n    }\r\n  \r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n      if (prevOpen.current === true && open === false) {\r\n        anchorRef.current.focus();\r\n      }\r\n  \r\n      prevOpen.current = open;\r\n    }, [open]);\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <div>\r\n          <Button\r\n            ref={anchorRef}\r\n            aria-controls={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleToggle}\r\n          >\r\n            {user.username}\r\n          </Button>\r\n          <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={handleClose}>\r\n                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                      <MenuItem component={Link} to={Routes.User.link(user.id)} onClick={handleClose}>Профиль</MenuItem>\r\n                      {\r\n                          Routes.User.tabList.map(item => <MenuItem id={item.subLink} component={Link} to={Routes.User.link(user.id)+'/'+item.subLink}\r\n                           onClick={handleClose}>{item.label}</MenuItem>)\r\n                      }\r\n                      <MenuItem  component={Link} to={Routes.EditProfilePage.path} onClick={handleClose}>Настройки</MenuItem>\r\n                      <MenuItem  component={Link} to={Routes.SignIn.path} onClick={logout}>Выход</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction TemporaryDrawer() {\r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, left: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent:'center',padding:8,paddingLeft:0}}>\r\n                <Avatar src=\"/logo192.png\" />\r\n            </div>\r\n      <List>\r\n              {TabRouteList.map(route=><ListItem button\r\n       key={route.name} \r\n       component={Link} \r\n       to={route.path} \r\n       label={route.ruName} >\r\n           \r\n            <ListItemText primary={route.ruName} />\r\n          </ListItem>\r\n         )}\r\n      </List>\r\n\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <IconButton onClick={toggleDrawer(anchor, true)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default inject('authStore')(NavBar)"],"sourceRoot":""}