{"version":3,"sources":["Components/mangaList/index.js","Components/mangaUpdateList/index.js","Components/verticalMangaList/index.js","Pages/MainPage.js","Components/mangaCard/index.js"],"names":["props","console","log","style","container","spacing","list","map","el","key","id","item","xs","md","lg","to","Routes","Manga","link","src","imgUrl","load","title","englishTitle","subtitle","1","2","3","status","lastChapter","volume","chapter","isLoading","Array","skeletonNum","_","i","register","ru","useStyles","makeStyles","theme","root","paddingTop","height","type","itemImg","marginRight","itemImgLoading","width","animation","backgroundColor","chapterItem","padding","color","palette","text","primary","MangaListItem","classes","size","alignItems","className","secondary","component","updates","chapters","chap","length","count","Link","ReadManga","button","datetime","createdAt","locale","MangaLoadListItem","i1","slice","percent","i2","marginBottom","UpdateList","overflow","VerticalMangaList","List","ListItem","ListItemAvatar","ListItemText","genres","name","join","MangaTitle","topGroup","wrapMangaList","contentBox","updatesTitle","lineHeight","paddingLeft","MainPage","withWidth","observer","mainPageStore","store","useEffect","created","fetch","popularUpdates","news","display","minWidth","Paper","variant","elevation","square","Typography","Hidden","smDown","inject","textOverflow","whiteSpace","marginTop","border","background"],"mappings":"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","file":"static/js/28.e2f8421b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { Link } from \"react-router-dom\";\r\nimport Manga from '../mangaCard';\r\nimport { Routes } from '../../Routes'\r\n// import props from './../mangaCard/index';\r\n\r\nexport default props => {\r\n    console.log(props)\r\n    return (\r\n        <>\r\n        <Grid style={props.style} container spacing={2}>\r\n        {\r\n            props.list.map(el=>\r\n                <Grid  key={el.id} item xs={4} md={3} lg={2} >\r\n                    <Link to={Routes.Manga.link(el.id)}>\r\n                        <Manga src={el.imgUrl} load={false}\r\n                        title={`${el.title} | ${el.englishTitle}`} \r\n                        subtitle={`${{1:'Ongoing',2:'Completed',3:'Paused'}[el.status.id]}, ` + (el.lastChapter ? `глава ${el.lastChapter.volume} - ${el.lastChapter.chapter}` : 'глав нет')}/>\r\n                    </Link>\r\n                </Grid>\r\n            )\r\n        }\r\n        {props.isLoading&&\r\n            [...Array(props.skeletonNum)].map((_,i)=>\r\n                <Grid  key={i} item xs={4} md={3} lg={2} >\r\n                    <Manga load />\r\n                </Grid>\r\n            )\r\n        }\r\n        </Grid>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Routes } from '../../Routes'\r\n\r\nimport TimeAgo from 'timeago-react';\r\nimport {register} from 'timeago.js';\r\nimport ru from 'timeago.js/lib/lang/ru';\r\nregister('ru', ru);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        paddingTop:0,\r\n    },\r\n    item:{\r\n        height:props => props.type==='min'?140:190,\r\n        paddingTop:0,\r\n    },\r\n    itemImg:{\r\n        height: props => props.type==='min'?130:160,\r\n        marginRight:theme.spacing(2),\r\n    },\r\n    itemImgLoading:{\r\n      height: props => props.type==='min'?130:160,\r\n      width: props => props.type==='min'?92:114,\r\n      marginRight:theme.spacing(2),\r\n      animation: 'MuiSkeleton-keyframes-pulse 1.5s ease-in-out 0.5s infinite',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.04)'\r\n    },\r\n    chapterItem:{\r\n        padding:0\r\n    },\r\n    title:{\r\n      color:theme.palette.text.primary\r\n    }\r\n}));\r\n\r\n\r\n  const MangaListItem = ({props,classes,size}) => (\r\n    <>\r\n    {\r\n      props.list.map(item=>(\r\n          <ListItem key={`update_list_${item.id}`} alignItems=\"flex-start\" className={classes.item}>\r\n          <ListItemAvatar>\r\n          <Link to={Routes.Manga.link(item.id)}>\r\n              <img src={item.imgUrl} className={classes.itemImg} ></img>\r\n          </Link>\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n          primary={<Link className={classes.title} to={Routes.Manga.link(item.id)}>{item.title}</Link>}\r\n          secondary={\r\n              <>\r\n              <List component=\"div\">\r\n                  <Divider />\r\n                  \r\n                  {\r\n                      item.updates.chapters.map((chap,i)=>(\r\n                      (i<(item.updates.chapters.length-1==item.updates.count?size:(size-1)))&&<ListItem \r\n                      key={`update_list_${item.id}_chap_${chap.id}`} \r\n                      className={classes.chapterItem}\r\n                      component={Link} \r\n                      to={Routes.ReadManga.link(item.id, chap.id)} \r\n                      button \r\n                      >\r\n                          \r\n                          <ListItemText primary={`Том-${chap.volume} Глава-${chap.chapter}`} />\r\n                          <ListItemSecondaryAction>\r\n                            <TimeAgo\r\n                            datetime={chap.createdAt}\r\n                            locale='ru'\r\n                            />\r\n                          </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                      ))\r\n                  }\r\n                  {\r\n                      (item.updates.count>3)\r\n                      &&<ListItem button className={classes.chapterItem}\r\n                      component={Link} \r\n                      to={Routes.Manga.link(item.id)} \r\n                      >\r\n                          <ListItemText primary={`Показать еще ${item.updates.count-(size-1)} новых глав`} />\r\n                      </ListItem>\r\n                  }\r\n                  </List>\r\n              </>\r\n          }\r\n          />\r\n          </ListItem>\r\n      ))\r\n    }\r\n    </>\r\n  )\r\n\r\n\r\n\r\n\r\n  const MangaLoadListItem = ({props,classes,size}) => (\r\n    <>\r\n    {\r\n      [...Array(5)].map((_,i1)=>(\r\n          <ListItem key={`update_list_load${i1}`} alignItems=\"flex-start\" className={classes.item}>\r\n          <ListItemAvatar>\r\n              <div className={classes.itemImgLoading}></div>\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n          primary={<Skeleton width={430}/>}\r\n          secondary={\r\n              <>\r\n              <List component=\"div\">\r\n                  <Divider />\r\n                  \r\n                  {\r\n                      ([69,70,73,75].slice(0,size)).map((percent,i2)=>(\r\n                      <ListItem \r\n                      key={`update_list_load${i1}_chap_${i2}`} \r\n                      >\r\n                          <Skeleton height={15} width={`${percent}%`} style={{ marginBottom: 0 }} />\r\n                      </ListItem>\r\n                      ))\r\n                  }\r\n                  </List>\r\n              </>\r\n          }\r\n          />\r\n          </ListItem>\r\n      ))\r\n    }\r\n    </>\r\n  )\r\n\r\n\r\n\r\n\r\n  const UpdateList = props => {\r\n    const classes = useStyles(props);\r\n    const size = props.type==='min'?3:4\r\n    console.log(props.isLoading)\r\n    return(\r\n      <div>\r\n\r\n        <List className={classes.root}>\r\n          <MangaListItem size={size} props={props} classes={classes}/>\r\n          {props.isLoading&&\r\n          <MangaLoadListItem size={size} props={props} classes={classes}/>\r\n          }\r\n        </List>\r\n      </div>\r\n    )}\r\n\r\n  export default UpdateList;","import React from 'react';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Routes } from '../../Routes'\r\nimport {  makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding:0,\r\n    },\r\n    item:{\r\n        height: 90,\r\n        padding:0,\r\n    },\r\n    itemImg:{\r\n        height: 70,\r\n        marginRight:theme.spacing(1)\r\n    },\r\n    chapterItem:{\r\n        padding:0\r\n    },\r\n    text:{\r\n       'text-overflow': 'ellipsis',\r\n        height: 65,\r\n        'margin-top': 3,\r\n        overflow: 'hidden'\r\n    }\r\n}));\r\n\r\n\r\nconst VerticalMangaList = ({list,isLoading}) => {\r\n  const classes = useStyles();\r\n  return(\r\n    <div>\r\n      <List className={classes.root}>\r\n{\r\n    !isLoading&&list.map((item,i)=>(\r\n        <ListItem key={`vl_iKey=${item.id}`} component={Link} to={Routes.Manga.link(item.id)} alignItems=\"flex-start\" className={classes.item}>\r\n        <ListItemAvatar>\r\n            <img src={item.imgUrl} className={classes.itemImg}></img>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n        className={classes.text}\r\n        primary={item.title}\r\n        secondary={\r\n            <>\r\n            Жанры:\r\n            {item.genres.map(el=>el.name).join(', ')}\r\n            </>\r\n        }\r\n        />\r\n        </ListItem>\r\n    ))\r\n}\r\n      </List>\r\n    </div>\r\n  )}\r\n\r\n\r\n  export default VerticalMangaList;","import React, { useEffect } from 'react';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport MangaList from '../Components/mangaList';\nimport UpdateList from '../Components/mangaUpdateList';\nimport VerticalMangaList from '../Components/verticalMangaList';\nimport { observer, inject} from 'mobx-react';\nimport Hidden from '@material-ui/core/Hidden';\nimport withWidth from '@material-ui/core/withWidth';\n\nconst useStyles = makeStyles(theme => ({\n  MangaTitle: {\n    marginBottom: theme.spacing(1.5),\n  },\n  topGroup: {\n    paddingTop:72,\n    marginBottom: theme.spacing(2),\n  },\n  wrapMangaList: {\n    marginBottom: theme.spacing(2.5),\n  },\n  contentBox: {\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`\n    // boxShadow: \"0 3px 12px 0 rgba(218,224,235,.6)\",\n  },\n  updatesTitle: {\n    lineHeight: 0.5,\n    paddingLeft: theme.spacing(2),\n    paddingTop: theme.spacing(1)\n  }\n}));\n\n\nconst MainPage = withWidth()(observer(({mainPageStore,width}) => {\n  const classes = useStyles();\n  const store = mainPageStore\n  const skeletonNum = {\n    'xl':6,\n    'lg':6,\n    'md':4,\n    'sm':3,\n    'xs':3\n  }\n  useEffect(()=>{\n    store.created.fetch()\n    store.popularUpdates.fetch()\n    store.updates.fetch()\n    store.news.fetch()\n  },[])\n  return(\n      <div className={classes.topGroup}>\n        <div style={{display: \"flex\"}}>\n          <div style={{minWidth:'calc(100% - 300px)'}}>\n            <div className={classes.wrapMangaList}>\n            <Paper variant=\"elevation\" elevation={1} square className={classes.contentBox}>\n              <Typography variant=\"body2 caption\" component=\"h3\" className={classes.MangaTitle}>\n                Обновления популярной манги\n              </Typography>\n\n              {/* <Hidden mdDown>\n                <MangaList {...store.popularUpdates} />\n              </Hidden> */}\n     \n                <div style={{width:\"100%\",'overflow-x': skeletonNum[width]===6?'hidden':'scroll','overflow-y': 'hidden',}}>\n                  <MangaList style={{'flex-wrap': 'nowrap',width:\"calc(100% + 16px)\"}} {...store.popularUpdates} skeletonNum={skeletonNum[width]}/>\n                </div>\n        \n            </Paper>  \n            </div>\n            <div className={classes.wrapMangaList}>\n            <Paper variant=\"outlined\" square className={classes.contentBox}>\n              <Typography variant=\"body2 caption\" component=\"h3\" className={classes.MangaTitle}>\n                Новости\n              </Typography>\n              {store.news.text}\n            </Paper>\n            </div>\n            <div>\n              <Typography color=\"textPrimary\" variant=\"body2 caption\" component=\"h3\" className={`${classes.MangaTitle} ${classes.updatesTitle}`}>\n                Новые главы\n              </Typography>\n                <UpdateList {...store.updates} type='min'/>\n            </div>\n          </div>\n          <Hidden smDown>\n            <div style={{minWidth: 300, paddingLeft:20}}>\n              {/* <div className={classes.wrapMangaList}>\n                <Paper square className={classes.contentBox}>\n                  <Typography variant=\"body2 caption\" component=\"h3\" className={classes.MangaTitle}>\n                    Прочитано \n                  </Typography>\n                  <Typography variant=\"h2\" component=\"h3\" className={classes.MangaTitle}>\n                    34 / 519\n                  </Typography>\n                </Paper>\n              </div> */}\n              <div className={classes.wrapMangaList}>\n                <Paper square className={classes.contentBox}>\n                  <Typography variant=\"body2 caption\" component=\"h3\" className={classes.MangaTitle}>\n                    Новая мангa\n                  </Typography>\n                  <VerticalMangaList  {...store.created}/>\n                </Paper>\n              </div>\n              \n              {/* <div className={classes.wrapMangaList}>\n                <Paper square className={classes.contentBox}>\n                  <Typography variant=\"body2 caption\" component=\"h3\" className={classes.MangaTitle}>\n                    Популярная манга\n                  </Typography>\n                  <VerticalMangaList/>\n                </Paper>\n              </div> */}\n            </div>\n          </Hidden>\n        </div>\n      </div>\n  )}))\n\n\n  export default inject('mainPageStore')(MainPage);","import React from 'react';\r\nimport './card.css'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Badge from '@material-ui/core/Badge';\r\nconst useStyles = makeStyles(theme => ({\r\n    name: {\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        marginTop: theme.spacing(1)\r\n    },\r\n}));\r\n\r\n\r\nexport default props => {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n        <div className=\"card_head\">\r\n            <div className=\"img_spacer\" ></div>\r\n            {!props.load\r\n                ?<img className='card_head_img' src={props.src}></img>\r\n                :<img className={'card_head_img MuiSkeleton-pulse'} style={{border:'none', background:'rgba(0, 0, 0, 0.04)'}}></img>\r\n            }\r\n \r\n        </div>\r\n    \r\n        <div className=\"card_body\">\r\n            <Typography color=\"textPrimary\" className={classes.name} variant=\"subtitle2\">\r\n            {!props.load\r\n                ?props.title\r\n                :<Skeleton className=\"\"  width=\"100%\" />\r\n            }\r\n            </Typography>\r\n            <Typography color=\"primary\" variant=\"caption\">\r\n            {!props.load\r\n                ?props.subtitle\r\n                :<Skeleton className=\"\" width=\"80%\" />\r\n            }\r\n            </Typography>\r\n        </div>\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}